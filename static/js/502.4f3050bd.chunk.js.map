{"version":3,"file":"static/js/502.4f3050bd.chunk.js","mappings":"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","sources":["components/TextField/InputField.jsx","components/PhoneBookList/phone-book-list.styled.jsx","components/PhoneBookList/PhoneBookList.jsx","components/PhoneBookFilter/phone-book-filter.styled.jsx","components/PhoneBookFilter/PhoneBookFilter.jsx","components/PhoneBookForm/initialState.js","components/PhoneBookForm/fields.js","components/PhoneBookForm/phone-book-form.styled.jsx","components/PhoneBookForm/PhoneBookForm.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { TextField } from '@mui/material';\n\nconst InputField = ({ handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <TextField\n      htmlFor={id}\n      variant=\"outlined\"\n      onChange={handleChange}\n      {...props}\n    />\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport ListItem from '@mui/material/ListItem';\n\nconst ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-left: 40px;\n`;\n\nconst ContactItem = styled(ListItem)``;\n\nconst CallContact = styled.a`\n  text-decoration: none;\n  color: inherit;\n`;\n\nexport { ContactsList, ContactItem, CallContact };\n","import PropTypes from 'prop-types';\n\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\n\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Grid from '@mui/material/Grid';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { ContactItem, CallContact } from './phone-book-list.styled';\n\nconst PhoneBookList = ({ removeContacts, items }) => {\n  const contacts = items.map(({ id, name, number }) => (\n    <ContactItem\n      button={true}\n      href={`tel:${number}`}\n      key={id}\n      secondaryAction={\n        <IconButton\n          onClick={() => removeContacts(id)}\n          type=\"button\"\n          edge=\"end\"\n          aria-label=\"delete\"\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemAvatar>\n        <Avatar />\n      </ListItemAvatar>\n      <CallContact href={`tel:${number}`}>\n        <ListItemText primary={name} secondary={number ? number : null} />\n      </CallContact>\n    </ContactItem>\n  ));\n\n  return (\n    <Box sx={{ flexGrow: 1, maxWidth: 752 }}>\n      <Grid item xs={12} md={6}>\n        <List>{contacts}</List>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default PhoneBookList;\n\nPhoneBookList.defaultProps = {\n  items: [],\n};\n\nPhoneBookList.propTypes = {\n  removeContacts: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nconst FilterBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-bottom: 15px;\n`;\n\nconst FilterLabel = styled.label``;\n\nexport { FilterBox, FilterLabel };\n","import PropTypes from 'prop-types';\n\nimport InputField from 'components/TextField/InputField';\n\nimport { FilterBox, FilterLabel } from './phone-book-filter.styled';\n\nconst PhoneBookFilter = ({ handleChange, value }) => {\n  return (\n    <FilterBox>\n      <FilterLabel>Find contacts by name</FilterLabel>\n      <InputField\n        fullWidth\n        size=\"small\"\n        sx={{}}\n        value={value}\n        name=\"filter\"\n        onChange={handleChange}\n        margin=\"dense\"\n      />\n    </FilterBox>\n  );\n};\n\nexport default PhoneBookFilter;\n\nPhoneBookFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'User name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  number: {\n    type: 'text',\n    name: 'number',\n    required: true,\n    label: 'User number',\n    inputProps: {\n      pattern: '/^[+]?3?[s]?8?[s]?(?0d{2}?)?[s]?d{3}[s|-]?d{2}[s|-]?d{2}$/',\n      mask: '+38 (000) 000-00-00',\n    },\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  },\n};\n\nexport default fields;\n","import styled from '@emotion/styled';\n\nconst PhoneBookForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputWrapper = styled.div``;\n\nexport { PhoneBookForm, InputWrapper };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport initialState from './initialState';\nimport fields from './fields';\nimport InputField from 'components/TextField/InputField';\n\nimport { Button } from '@mui/material';\nimport { PhoneBookForm, InputWrapper } from './phone-book-form.styled';\n\nconst PhoneBooksForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <PhoneBookForm action=\"\" onSubmit={handleSubmit}>\n      <InputWrapper>\n        <InputField\n          fullWidth\n          size=\"small\"\n          sx={{}}\n          value={name}\n          onChange={handleChange}\n          {...fields.name}\n          margin=\"dense\"\n        />\n      </InputWrapper>\n      <InputWrapper>\n        <InputField\n          fullWidth\n          size=\"small\"\n          sx={{ marginTop: '15px' }}\n          value={number}\n          onChange={handleChange}\n          {...fields.number}\n          margin=\"dense\"\n        />\n      </InputWrapper>\n      <Button sx={{ marginTop: '15px' }} variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </PhoneBookForm>\n  );\n};\n\nexport default PhoneBooksForm;\n\nPhoneBooksForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","export const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.toLowerCase().includes(normalizedFilter)\n    );\n  });\n  return result;\n};\n\nexport const loading = ({ contacts }) => contacts.isLoading;\nexport const error = ({ contacts }) => contacts.error;\n","export const getFilter = ({ filter }) => filter;\n","import styled from '@emotion/styled';\n\nconst MainSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\nconst ContactsTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n`;\n\nexport { MainSection, ContactsTitle };\n","import * as React from 'react';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport PageviewIcon from '@mui/icons-material/Pageview';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\n\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport PhoneBookList from 'components/PhoneBookList/PhoneBookList';\nimport PhoneBookFilter from 'components/PhoneBookFilter/PhoneBookFilter';\nimport PhoneBooksForm from 'components/PhoneBookForm/PhoneBookForm';\nimport Loader from '../../shared/Loader/Loader';\n\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from 'redux/contacts/contacts-operations';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport {\n  getFilteredContacts,\n  loading,\n  error,\n} from 'redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nimport { MainSection, ContactsTitle } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(loading);\n  const isError = useSelector(error);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const addContacts = ({ name, number }) => {\n    dispatch(addContact({ name, number }));\n    if (isError) {\n      toast.error(\n        `The limit has been exceeded. You can only add 100 contacts!`\n      );\n    }\n  };\n\n  const removeContacts = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <MainSection>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <ContactsTitle>\n            <AddIcCallIcon />\n            <Typography>Add contact</Typography>\n          </ContactsTitle>\n        </AccordionSummary>\n        <AccordionDetails>\n          <PhoneBooksForm onSubmit={addContacts} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <ContactsTitle>\n            <PageviewIcon />\n            <Typography>Find contact</Typography>\n          </ContactsTitle>\n        </AccordionSummary>\n        <AccordionDetails>\n          <PhoneBookFilter value={filter} handleChange={handleFilter} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion defaultExpanded={true}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <ContactsTitle>\n            <Stack spacing={5} direction=\"row\">\n              <Badge\n                color=\"secondary\"\n                badgeContent={filteredContacts.length}\n                showZero\n              >\n                <ContactPhoneIcon />\n              </Badge>\n            </Stack>\n            <Typography>Contacts</Typography>\n          </ContactsTitle>\n        </AccordionSummary>\n        <AccordionDetails>\n          {isLoading && <Loader />}\n          {isContacts && (\n            <PhoneBookList\n              items={filteredContacts}\n              removeContacts={removeContacts}\n            />\n          )}\n          {!isContacts && <p>No contacts in list</p>}\n        </AccordionDetails>\n      </Accordion>\n    </MainSection>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["handleChange","props","id","useMemo","nanoid","htmlFor","variant","onChange","ContactItem","styled","ListItem","CallContact","PhoneBookList","removeContacts","contacts","items","map","name","number","button","href","secondaryAction","IconButton","onClick","type","edge","Delete","ListItemAvatar","Avatar","ListItemText","primary","secondary","Box","sx","flexGrow","maxWidth","Grid","item","xs","md","List","defaultProps","FilterBox","FilterLabel","value","InputField","fullWidth","size","margin","required","label","pattern","title","inputProps","mask","PhoneBookForm","InputWrapper","onSubmit","useState","initialState","state","setState","target","prevState","action","e","preventDefault","fields","marginTop","Button","getFilteredContacts","filter","normalizedFilter","toLowerCase","includes","loading","isLoading","error","getFilter","MainSection","ContactsTitle","filteredContacts","useSelector","isError","dispatch","useDispatch","useEffect","fetchContacts","isContacts","Boolean","length","Accordion","AccordionSummary","expandIcon","ExpandMore","AddIcCall","Typography","AccordionDetails","addContact","toast","Pageview","setFilter","defaultExpanded","Stack","spacing","direction","Badge","color","badgeContent","showZero","ContactPhone","Loader","deleteContact"],"sourceRoot":""}